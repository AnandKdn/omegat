trigger:
  branches:
    include:
      - master
      - releases/*
      - refs/tags/v*
    exclude:
      - release/*
      - standard

pr:
  branches:
    include:
      - master
      - releases/*
    exclude:
      - standard
  paths:
    exclude:
      - docs
      - doc_src
      - docs_devel
      - README.md

schedules:
  - cron: '0 12 * * 0'
    displayName: Weekly Sunday run
    branches:
      include:
        - master

variables:
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
  isRelease: $[contains(variables['Build.SourceBranch'], 'refs/tags/v')]

jobs:
- job: JRE11_Prep
  displayName: JRE preparation
  pool:
    vmImage: 'ubuntu-22.04'
  condition: eq(variables['Build.Reason'], 'Schedule')
  steps:
    - template: ci/azure-pipelines/jre_prep.yml

- job: JRE8_Prep
  displayName: JRE preparation
  pool:
    vmImage: 'ubuntu-22.04'
  condition: eq(variables['Build.Reason'], 'Schedule')
  steps:
    - template: ci/azure-pipelines/jre8_prep.yml

- job: GitHubCI
  displayName: GitHub CI (new)
  pool:
    vmImage: 'ubuntu-22.04'
  condition: ne(variables['Build.Reason'], 'Schedule')
  variables:
    GRADLE_USER_HOME: '$(Pipeline.Workspace)/.gradle'
  steps:
    - template: ci/azure-pipelines/check_steps.yml

- job: ReleaseBuild
  displayName: Release build for master and releases/x.x
  pool:
    vmImage: 'ubuntu-22.04'
  dependsOn: GitHubCI
  condition: and(succeeded(), or(eq(variables.isMain, true), eq(variables.isRelease, true)), ne(variables['Build.Reason'], 'Schedule'))
  variables:
    GRADLE_USER_HOME: '$(Pipeline.Workspace)/.gradle'
  steps:
    - template: ci/azure-pipelines/release_steps.yml
